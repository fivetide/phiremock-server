{"version":3,"sources":["components/NavLink.jsx","components/Navigation.jsx","controllers/RequestListController.js","repositories/RequestsRepository.js","Factory.js","components/JsonDisplay.jsx","components/RequestsList.jsx","components/ExpectationsList.jsx","components/AddExpectationForm.jsx","components/PageContent.jsx","components/Application.jsx","index.js"],"names":["NavLink","href","this","props","name","id","className","onClick","text","Component","Navigation","state","tabs","listRequests","selectedClass","listExpectations","addExpectation","console","log","Object","values","map","tabData","linkClickHandler","clickedTab","modifiedTabs","getTabsWithProperSelectedClass","newState","assign","setState","selectedTab","i","hasOwnProperty","RequestListController","requestsRepository","getRequests","error","RequestsRepository","request","set","result","JSON","parse","Factory","createRequestsRepository","JsonDisplay","displayObject","class","Array","isArray","displayArray","level","displayIterableWithKeys","keys","displayIterableWithoutKeys","value","toString","trim","objectKeys","key","displayValue","displayFunction","displayString","displayBoolean","displayNumber","displayUndefined","displayDefault","factory","RequestsList","requests","controller","createRequestListController","then","ExpectationsList","AddExpectationForm","PageContent","tab","currentTab","displayTab","Application","changeTab","renderHeader","renderMainSection","renderFooter","render","document","getElementById"],"mappings":"4LAEqBA,E,uKAGb,OACI,6BACI,mBAAGC,KAAM,IAAMC,KAAKC,MAAMC,KAC1BC,GAAIH,KAAKC,MAAME,GACfC,UAAWJ,KAAKC,MAAMG,UACtBC,QAASL,KAAKC,MAAMI,QAHpB,SAIEL,KAAKC,MAAMK,QALRN,KAAKC,MAAMC,U,GAJKK,aCChBC,E,kDACjB,WAAaP,GAAQ,IAAD,8BAChB,cAAMA,IACDQ,MAAQ,CACTC,KAAM,CACFC,aAAc,CACVT,KAAM,eACNI,KAAM,gBACNH,GAAI,2BACJS,cAAe,YAEnBC,iBAAkB,CACdX,KAAM,mBACNI,KAAM,oBACNH,GAAI,+BACJS,cAAe,IAEnBE,eAAgB,CACZZ,KAAM,iBACNI,KAAM,kBACNH,GAAI,6BACJS,cAAe,MApBX,E,qDA0BV,IAAD,OAEL,OADAG,QAAQC,IAAIhB,KAAKS,OAEb,iCAAQ,8BAAK,6BACRQ,OAAOC,OAAOlB,KAAKS,MAAMC,MAAMS,KAC5B,SAACC,GACG,OACI,cAAC,EAAD,CAASlB,KAAMkB,EAAQlB,KACnBC,GAAIiB,EAAQjB,GACZC,UAAW,cAAgBgB,EAAQR,cACnCP,QAAS,kBAAM,EAAKgB,iBAAiBD,EAAQlB,OAC7CI,KAAMc,EAAQd,kB,uCASzBgB,GACbP,QAAQC,IAAI,YAAcM,GAC1B,IAAMC,EAAevB,KAAKwB,+BAA+BF,GACnDG,EAAWR,OAAOS,OACpB,GACA1B,KAAKS,MACL,CAACC,KAAMa,IAEXvB,KAAK2B,SAASF,GACdzB,KAAKC,MAAMI,QAAQiB,K,qDAGQM,GAC3B,IAAML,EAAeN,OAAOS,OAAO,GAAI1B,KAAKS,MAAMC,MAClD,IAAK,IAAMmB,KAAKN,EACRA,EAAaO,eAAeD,KAExBN,EAAaM,GAAGjB,cADhBiB,IAAMD,EAC0B,WAEA,IAI5C,OAAOL,M,GAtEyBhB,aCHnBwB,E,WAEjB,WAAYC,GAAqB,oBAC7BhC,KAAKgC,mBAAqBA,E,0DAI1B,IAEI,OADiBhC,KAAKgC,mBAAmBC,cAE3C,MAAOC,GACLnB,QAAQC,IAAIkB,Q,qCCPHC,E,+OAIYC,MANP,gDAOTC,IAAI,eAAgB,oBACpBA,IAAI,SAAU,oB,cAFbC,E,yBAGCC,KAAKC,MAAMF,EAAOhC,O,gCAEzBS,QAAQC,IAAR,M,sHCVSyB,E,sHAEb,OAAO,IAAIV,EAAsB/B,KAAK0C,8B,iDAItC,OAAO,IAAIP,M,aCPEQ,E,uKAIb,OADA5B,QAAQC,IAAIhB,KAAKC,MAAM2C,eAChB,qBAAKC,MAAM,eAAX,SAECC,MAAMC,QAAQ/C,KAAKC,MAAM2C,eACnB5C,KAAKgD,aAAahD,KAAKC,MAAM2C,eAC7B5C,KAAK4C,cAAc5C,KAAKC,MAAM2C,mB,oCAKlCA,GAA2B,IAAZK,EAAW,uDAAH,EACjC,OACI,sBAAKJ,MAAO,0BAA4BI,EAAxC,UACI,sBAAMJ,MAAM,cAAZ,SAA2B,MACtB7C,KAAKkD,wBACFN,EACA3B,OAAOkC,KAAKP,GACZK,GAER,sBAAMJ,MAAM,cAAZ,SAA2B,W,mCAK1BD,GAA2B,IAAZK,EAAW,uDAAH,EAChC,OACI,sBAAKJ,MAAO,yBAA2BI,EAAvC,UACI,sBAAMJ,MAAM,UAAZ,SAAuB,MAClB7C,KAAKoD,2BACFR,EADH,YAEOA,EAAcO,QAClBF,GAER,sBAAMJ,MAAM,UAAZ,SAAuB,W,oCAKrBQ,GACV,OACI,sBAAMR,MAAM,cAAZ,SAA2BQ,M,qCAIpBA,GACX,OACI,sBAAMR,MAAM,eAAZ,SAA4BQ,M,sCAIpBA,GACZ,OACI,sBAAMR,MAAM,gBAAZ,SAA4B,8BAAMQ,EAAMC,iB,oCAIlCD,GACV,OACI,uBAAMR,MAAM,cAAZ,cAA4BQ,EAAME,OAAlC,S,yCAKJ,OACI,sBAAMV,MAAM,iBAAZ,yB,qCAIOQ,GACX,OACI,sBAAMR,MAAM,eAAZ,SAA4BQ,M,8CAIZT,EAAeY,EAAYP,GAAQ,IAAD,OACtD,OAAOO,EAAWrC,KAAI,SAACsC,GACnB,OACI,sBAA+BZ,MAAM,WAArC,UACI,uBAAMA,MAAM,WAAZ,UAAwBY,EAAxB,OACC,EAAKC,aAAad,EAAea,EAAKR,KAFjC,MAAQQ,EAAMR,Q,iDAQTL,EAAeY,EAAYP,GAAQ,IAAD,OACzD,OAAOO,EAAWrC,KAAI,SAACsC,GACnB,OACI,qBAAKZ,MAAM,WAAX,SACK,EAAKa,aAAad,EAAea,EAAKR,U,mCAM1CL,EAAea,EAAKR,GAC7B,cAAgBL,EAAca,IAC1B,IAAK,SACD,OAAIX,MAAMC,QAAQH,EAAca,IACrBzD,KAAKgD,aAAaJ,EAAca,GAAMR,EAAQ,GAElDjD,KAAK4C,cAAcA,EAAca,GAAMR,EAAQ,GAC1D,IAAK,WACD,OAAOjD,KAAK2D,gBAAgBf,EAAca,IAC9C,IAAK,SACD,OAAOzD,KAAK4D,cAAchB,EAAca,IAC5C,IAAK,UACD,OAAOzD,KAAK6D,eAAejB,EAAca,IAC7C,IAAK,SACD,OAAOzD,KAAK8D,cAAclB,EAAca,IAC5C,IAAK,YACD,OAAOzD,KAAK+D,mBAChB,QACI,OAAO/D,KAAKgE,eAAepB,EAAca,S,GApHhBlD,aCEnC0D,EAAU,IAAIxB,EAECyB,E,kDAEjB,WAAajE,GAAQ,IAAD,8BAChB,cAAMA,IACDQ,MAAQ,CAAC0D,SAAU,IACxB,EAAKC,WAAaH,EAAQI,8BAHV,E,qDAMV,IAAD,OAOL,OANArE,KAAKoE,WAAWnC,cAAcqC,MAC1B,SAACH,GACGpD,QAAQC,IAAImD,GACZ,EAAK1D,MAAM0D,SAAWA,KAI1B,qBAAKhE,GAAG,eAAR,SACI,cAAC,EAAD,CAAayC,cAAe5C,KAAKS,MAAM0D,iB,GAjBb5D,aCJrBgE,E,uKAGb,OAAO,qBAAKpE,GAAG,yB,GAHuBI,aCAzBiE,E,uKAEb,OAAO,qBAAKrE,GAAG,2B,GAFyBI,aCG3BkE,E,uKAEb,IAAMC,EAAM1E,KAAKC,MAAM0E,WACnBC,EAAa,cAAC,EAAD,IAMjB,MALY,qBAARF,EACAE,EAAa,cAAC,EAAD,IACE,mBAARF,IACPE,EAAa,cAAC,EAAD,KAEV,yBAASzE,GAAG,OAAZ,SAAoByE,Q,GATMrE,aCDpBsE,E,kDACjB,WAAa5E,GAAQ,IAAD,8BAChB,cAAMA,IACDQ,MAAQ,CACTkE,WAAY,gBAHA,E,sDAOVD,GACN1E,KAAK2B,SAASV,OAAOS,OAAO,GAAI1B,KAAKS,MAAO,CAACkE,WAAYD,O,qCAG7C,IAAD,OACX,OAAO,cAAC,EAAD,CAAYrE,QAAS,SAACqE,GAAD,OAAS,EAAKI,UAAUJ,Q,0CAIpD,OAAO,cAAC,EAAD,CAAaC,WAAY3E,KAAKS,MAAMkE,e,qCAI3C,OAAO,6B,+BAIP,OACI,sBAAKxE,GAAG,eAAR,UACKH,KAAK+E,eACL/E,KAAKgF,oBACLhF,KAAKiF,sB,GA7BmB1E,aCAzC2E,iBAAO,cAAC,EAAD,IAAiBC,SAASC,eAAe,qB","file":"static/js/main.2cd15846.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nexport default class NavLink extends Component {\n\n    render() {\n        return (\n            <li key={this.props.name}>\n                <a href={'#' + this.props.name}\n                id={this.props.id}\n                className={this.props.className}\n                onClick={this.props.onClick}\n                >{this.props.text}</a>\n            </li>\n        );\n    }\n\n}","import React, {Component} from 'react';\nimport NavLink from './NavLink.jsx';\n\nexport default class Navigation extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            tabs: {\n                listRequests: {\n                    name: 'listRequests', \n                    text: 'List requests', \n                    id: 'nav-list-requests-button', \n                    selectedClass: 'selected'\n                },\n                listExpectations: {\n                    name: 'listExpectations', \n                    text: 'List expectations', \n                    id: 'nav-list-expectations-button', \n                    selectedClass: ''\n                },\n                addExpectation: {\n                    name: 'addExpectation', \n                    text: 'Add expectation', \n                    id: 'nav-add-expectation-button', \n                    selectedClass: ''\n                },\n            }\n        };\n    }\n\n    render() {\n        console.log(this.state);\n        return (\n            <header><nav><ul>\n                {Object.values(this.state.tabs).map(\n                    (tabData) => {\n                        return (\n                            <NavLink name={tabData.name}\n                                id={tabData.id}\n                                className={\"navigation \" + tabData.selectedClass}\n                                onClick={() => this.linkClickHandler(tabData.name)}\n                                text={tabData.text}\n                            />\n                        )\n                    }\n                )}\n            </ul></nav></header>\n        );\n    }\n\n    linkClickHandler(clickedTab) {\n        console.log(\"click on \" + clickedTab);\n        const modifiedTabs = this.getTabsWithProperSelectedClass(clickedTab);\n        const newState = Object.assign(\n            {}, \n            this.state, \n            {tabs: modifiedTabs}\n        )\n        this.setState(newState);\n        this.props.onClick(clickedTab);\n    }\n\n    getTabsWithProperSelectedClass(selectedTab) {\n        const modifiedTabs = Object.assign({}, this.state.tabs);\n        for (const i in modifiedTabs) {\n            if (modifiedTabs.hasOwnProperty(i)) {\n                if (i === selectedTab) {\n                    modifiedTabs[i].selectedClass = 'selected';\n                } else {\n                    modifiedTabs[i].selectedClass = '';\n                }\n            }\n        }\n        return modifiedTabs;\n    }\n}","export default class RequestListController {\n\n    constructor(requestsRepository) {\n        this.requestsRepository = requestsRepository;\n    }\n\n    getRequests() {\n        try {\n            const requests = this.requestsRepository.getRequests();\n            return requests;\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}","import * as request from \"superagent\";\n\nconst REQUESTS_ENDPOINT = 'http://localhost:8080/__phiremock/executions';\n\nexport default class RequestsRepository {\n    \n    async getRequests() {\n        try {\n            const result = await request.put(REQUESTS_ENDPOINT)\n                .set('Content-Type', 'application/json')\n                .set('Accept', 'application/json');\n            return JSON.parse(result.text);\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n}","import RequestListController from './controllers/RequestListController';\nimport RequestsRepository from './repositories/RequestsRepository';\n\nexport default class Factory {\n    createRequestListController() {\n        return new RequestListController(this.createRequestsRepository());\n    }\n\n    createRequestsRepository () {\n        return new RequestsRepository();\n    }\n}\n","import React, {Component} from 'react';\n\nexport default class JsonDisplay extends Component {\n    \n    render() {\n        console.log(this.props.displayObject);\n        return <div class=\"json-display\">\n            {\n                Array.isArray(this.props.displayObject) \n                    ? this.displayArray(this.props.displayObject) \n                    : this.displayObject(this.props.displayObject)\n            }\n        </div>;\n    }\n\n    displayObject(displayObject, level = 0) {\n        return (\n            <div class={\"json-object json-level-\" + level}>\n                <span class=\"curly-brace\">{\"{\"}</span>\n                    {this.displayIterableWithKeys(\n                        displayObject, \n                        Object.keys(displayObject), \n                        level\n                    )}\n                <span class=\"curly-brace\">{\"}\"}</span>\n            </div>\n        );\n    }\n\n    displayArray(displayObject, level = 0) {\n        return (\n            <div class={\"json-array json-level-\" + level}>\n                <span class=\"bracket\">{\"[\"}</span>\n                    {this.displayIterableWithoutKeys(\n                        displayObject, \n                        [...displayObject.keys()], \n                        level\n                    )}\n                <span class=\"bracket\">{\"]\"}</span>\n            </div>\n        );\n    }\n\n    displayNumber(value) {\n        return (\n            <span class=\"json-number\">{value}</span>\n        );\n    }\n\n    displayBoolean(value) {\n        return (\n            <span class=\"json-boolean\">{value}</span>\n        );\n    }\n\n    displayFunction(value) {\n        return (\n            <span class=\"json-function\"><pre>{value.toString()}</pre></span>\n        );\n    }\n\n    displayString(value) {\n        return (\n            <span class=\"json-string\">\"{value.trim()}\"</span>\n        );\n    }\n\n    displayUndefined() {\n        return (\n            <span class=\"json-undefined\">undefined</span>\n        );\n    }\n\n    displayDefault(value) {\n        return (\n            <span class=\"json-default\">{value}</span>\n        );\n    }\n\n    displayIterableWithKeys(displayObject, objectKeys, level) {\n        return objectKeys.map((key) => {\n            return (\n                <div key={'row' + key + level} class=\"json-row\">\n                    <span class=\"json-key\">{key}:</span>\n                    {this.displayValue(displayObject, key, level)}\n                </div>\n            );\n        });\n    }\n\n    displayIterableWithoutKeys(displayObject, objectKeys, level) {\n        return objectKeys.map((key) => {\n            return (\n                <div class=\"json-row\">\n                    {this.displayValue(displayObject, key, level)}\n                </div>\n            );\n        });\n    }\n\n    displayValue(displayObject, key, level) {\n        switch (typeof (displayObject[key])) {\n            case 'object':\n                if (Array.isArray(displayObject[key])) {\n                    return this.displayArray(displayObject[key], level + 1);\n                }\n                return this.displayObject(displayObject[key], level + 1);\n            case 'function':\n                return this.displayFunction(displayObject[key]);\n            case 'string':\n                return this.displayString(displayObject[key]);\n            case 'boolean':\n                return this.displayBoolean(displayObject[key]);\n            case 'number':\n                return this.displayNumber(displayObject[key]);\n            case 'undefined':\n                return this.displayUndefined();\n            default:\n                return this.displayDefault(displayObject[key]);\n        }\n    }\n}\n","import React, { Component } from \"react\";\nimport Factory from \"../Factory\";\nimport JsonDisplay from \"./JsonDisplay\";\n\nconst factory = new Factory();\n\nexport default class RequestsList extends Component {\n\n    constructor (props) {\n        super(props);\n        this.state = {requests: []};\n        this.controller = factory.createRequestListController();\n    }\n\n    render() {\n        this.controller.getRequests().then(            \n            (requests) => {\n                console.log(requests);\n                this.state.requests = requests;\n            }\n        );\n        return (\n            <div id=\"requestsList\">\n                <JsonDisplay displayObject={this.state.requests} />\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\";\n\nexport default class ExpectationsList extends Component {\n    render() {\n        // call controller to retrieve list.\n        return <div id=\"expectationsList\"></div>;\n    }\n}","import React, { Component } from \"react\";\n\nexport default class AddExpectationForm extends Component {\n    render() {\n        return <div id=\"addExpectationForm\"></div>;\n    }\n}","import React, { Component } from \"react\";\nimport RequestsList from './RequestsList.jsx';\nimport ExpectationsList from './ExpectationsList.jsx';\nimport AddExpectationForm from './AddExpectationForm.jsx';\n\nexport default class PageContent extends Component {\n    render() {\n        const tab = this.props.currentTab;\n        let displayTab = <RequestsList />;\n        if (tab === \"listExpectations\") {\n            displayTab = <ExpectationsList />;\n        } else if (tab === 'addExpectation') {\n            displayTab = <AddExpectationForm />;\n        }\n        return <section id=\"main\">{displayTab}</section>;\n    }\n}","import React, {Component} from 'react';\nimport Navigation from './Navigation.jsx';\nimport PageContent from './PageContent.jsx';\n\nexport default class Application extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            currentTab: \"listRequests\"\n        };\n    }\n\n    changeTab(tab) {\n        this.setState(Object.assign({}, this.state, {currentTab: tab}));\n    }\n\n    renderHeader() {\n        return <Navigation onClick={(tab) => this.changeTab(tab)} />;\n    }\n\n    renderMainSection() {\n        return <PageContent currentTab={this.state.currentTab} />;\n    }\n\n    renderFooter() {\n        return <footer></footer>;\n    }\n\n    render() {\n        return (\n            <div id=\"page-content\">\n                {this.renderHeader()}\n                {this.renderMainSection()}\n                {this.renderFooter()}\n            </div>\n        );\n      }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport Application from './components/Application.jsx';\n\nrender(<Application />, document.getElementById('phiremock-main'));\n"],"sourceRoot":""}